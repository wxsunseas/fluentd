
# [PARSER]
#     Name log_attributes
#     Format regex
#     Regex ^(?<log_time>[0-9-]+ [:0-9.]+) {1,}(?<severity>\w+)\s+(?<message>.*)
#     # Decode_Field json capturedJson
#     Time_Format %FT%H:%M:%S,%L
#     Time_Key time

# [PARSER]
#     Name         log_date
#     Format       regex
#     # Regex        ^(?<log_time>[0-9-]+ [:0-9.]+) {1,}(?<severity>\w+)\s+(?<message>.*)
#     Regex        ^(?<log_time>[0-9-]+ [:0-9.]+) {1,}(?<message>.*)
#     # Regex        ^([0-9-]+ [:0-9.]+) {1,}(.*)
# [PARSER]
#     Name        log_attributes
#     Format      json

[MULTILINE_PARSER]
    name          multiline-regex-test
    type          regex
    flush_timeout 1000
    #
    # Regex rules for multiline parsing
    # ---------------------------------
    #
    # configuration hints:
    #
    #  - first state always has the name: start_state
    #  - every field in the rule must be inside double quotes
    #
    # rules |   state name  | regex pattern                  | next state
    # ------|---------------|--------------------------------------------
    rule      "start_state"   "/^([0-9-]+ [:0-9.]+) {1,}(.*)/"                     "cont"
    rule      "cont"           "^(^((?!([0-9-]+ [:0-9.]+) {1,}(.*)).)*$)"          "cont"

    # ^(^((?!*****).)*$)